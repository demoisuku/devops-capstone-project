name: CI Build

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: accounts
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # linters
          pip install flake8 black

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready!"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Set test database env
        run: |
          echo "DATABASE_URI=postgresql://postgres:postgres@localhost:5432/accounts" >> $GITHUB_ENV
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/accounts" >> $GITHUB_ENV

      - name: Lint (flake8)
        run: flake8 .

      - name: Lint (black check)
        run: black --check .

      - name: Run unit tests
        env:
          DATABASE_URI: ${{ env.DATABASE_URI }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          FLASK_ENV: testing
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=service --cov-report=term-missing